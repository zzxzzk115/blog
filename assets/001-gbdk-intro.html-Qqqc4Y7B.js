const e=JSON.parse('{"key":"v-293fc33c","path":"/zh/game-dev/retro/gameboy/gbdk/001-gbdk-intro.html","title":"GBDK 简介","lang":"zh-CN","frontmatter":{"title":"GBDK 简介","author":"Lazy_V","date":"2022-12-18T19:05:00.000Z","category":["游戏开发"],"tag":["游戏开发","复古","GameBoy","GBDK"],"isOriginal":true,"description":"对于经典的 GB/GBC 开发，高手们习惯使用汇编。但是使用汇编需要我们首先对 GB/GBC 整个硬件原理和完整的指令集有了完整的了解后才合适，这样的成本太高了。 现代的 GB/GBC 开发，至少需要使用高级编程语言，例如 C 语言。我们可以利用 GBDK 和 C 语言，进行 GB/GBC 开发。 GBDK (GameBoy Development Kit) 即 GameBoy 开发工具包，主要包含一个 C 语言编译器： SDCC。它包括编译器、汇编器和链接器。GBDK 还包含一系列 Z80 处理器相关的库。GameBoy 的 CPU 和 Z80 比较像，可以说是基于 Z80，它兼容 Z80 的大部分指令集，所以那些库也可以有效利用。","head":[["meta",{"property":"og:url","content":"https://zzxzzk115.github.io/blog/zh/game-dev/retro/gameboy/gbdk/001-gbdk-intro.html"}],["meta",{"property":"og:site_name","content":"Lazy_V 的博客"}],["meta",{"property":"og:title","content":"GBDK 简介"}],["meta",{"property":"og:description","content":"对于经典的 GB/GBC 开发，高手们习惯使用汇编。但是使用汇编需要我们首先对 GB/GBC 整个硬件原理和完整的指令集有了完整的了解后才合适，这样的成本太高了。 现代的 GB/GBC 开发，至少需要使用高级编程语言，例如 C 语言。我们可以利用 GBDK 和 C 语言，进行 GB/GBC 开发。 GBDK (GameBoy Development Kit) 即 GameBoy 开发工具包，主要包含一个 C 语言编译器： SDCC。它包括编译器、汇编器和链接器。GBDK 还包含一系列 Z80 处理器相关的库。GameBoy 的 CPU 和 Z80 比较像，可以说是基于 Z80，它兼容 Z80 的大部分指令集，所以那些库也可以有效利用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-20T18:02:21.000Z"}],["meta",{"property":"article:author","content":"Lazy_V"}],["meta",{"property":"article:tag","content":"游戏开发"}],["meta",{"property":"article:tag","content":"复古"}],["meta",{"property":"article:tag","content":"GameBoy"}],["meta",{"property":"article:tag","content":"GBDK"}],["meta",{"property":"article:published_time","content":"2022-12-18T19:05:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-20T18:02:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GBDK 简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-18T19:05:00.000Z\\",\\"dateModified\\":\\"2022-12-20T18:02:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lazy_V\\"}]}"]]},"headers":[],"git":{"createdTime":1671385760000,"updatedTime":1671559341000,"contributors":[{"name":"Lazy_V","email":"954294627@qq.com","commits":2}]},"readingTime":{"minutes":0.85,"words":254},"filePathRelative":"zh/game-dev/retro/gameboy/gbdk/001-gbdk-intro.md","localizedDate":"2022年12月18日","excerpt":"<p>对于经典的 GB/GBC 开发，高手们习惯使用汇编。但是使用汇编需要我们首先对 GB/GBC 整个硬件原理和完整的指令集有了完整的了解后才合适，这样的成本太高了。</p>\\n<p>现代的 GB/GBC 开发，至少需要使用高级编程语言，例如 C 语言。我们可以利用 GBDK 和 C 语言，进行 GB/GBC 开发。</p>\\n<p><a href=\\"https://github.com/gbdk-2020/gbdk-2020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GBDK</a> (GameBoy Development Kit) 即 GameBoy 开发工具包，主要包含一个 C 语言编译器： SDCC。它包括编译器、汇编器和链接器。GBDK 还包含一系列 Z80 处理器相关的库。GameBoy 的 CPU 和 Z80 比较像，可以说是基于 Z80，它兼容 Z80 的大部分指令集，所以那些库也可以有效利用。</p>","autoDesc":true}');export{e as data};
